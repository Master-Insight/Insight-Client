---
import Section from "../Section.astro";

import Access from "@ico/skill/Access.astro";
import AstroIcon from "@ico/skill/astro.astro";
import CSS from "@ico/skill/css.astro";
import Excel from "@ico/skill/Excel.astro";
import Git from "@ico/skill/git.astro";
import GitHub from "@ico/skill/GitHub.astro";
import HTML from "@ico/skill/html.astro";
import JavaScript from "@ico/skill/javascript.astro";
import Jupyter from "@ico/skill/jupyter.astro";
import Looker from "@ico/skill/looker.astro";
import MySQL from "@ico/skill/mysql.astro";
import MongoDB from "@ico/skill/mongodb.astro";
import Next from "@ico/skill/next.astro";
import Node from "@ico/skill/node.astro";
import Numpy from "@ico/skill/numpy.astro";
import Pandas from "@ico/skill/pandas.astro";
import PowerBi from "@ico/skill/powerbi.astro";
import Python from "@ico/skill/python.astro";
import React from "@ico/skill/react.astro";
import SQL from "@ico/skill/sql.astro";
import Tableau from "@ico/skill/tableau.astro";
import Tailwind from "@ico/skill/tailwind.astro";
import TypeScript from "@ico/skill/type.astro";

const { data } = Astro.props;
const skills = Array.isArray(data) ? data : [];

const SKILLS_ICONS = {
  Access,
  Astro: AstroIcon,
  CSS,
  Excel,
  Git,
  GitHub,
  HTML,
  JavaScript,
  Jupyter,
  Looker,
  MongoDB,
  MySQL,
  Next,
  Node,
  Numpy,
  Pandas,
  PowerBi,
  Python,
  React,
  SQL,
  Tableau,
  Tailwind,
  TypeScript,
};
---

<Section title="Habilidades">
  {
    skills.length > 0 ? (
      <ul>
        {skills.map(({ name }) => {
          // Normaliza el nombre para que coincida con las claves en SKILLS_ICONS
          let iconName;
          iconName = name === "Next.js" ? "Next" : name;
          iconName = iconName === "Power BI" ? "PowerBi" : iconName;
          const Icon = SKILLS_ICONS[iconName];

          // Si no hay un ícono correspondiente, no renderizar el elemento
          if (!Icon) {
            console.warn(`No se encontró un ícono para la habilidad: ${name}`);
            return null;
          }

          return (
            <li key={name}>
              <Icon /> <span>{name}</span>
            </li>
          );
        })}
      </ul>
    ) : (
      <p>No hay habilidades para mostrar.</p>
    )
  }
</Section>

<style>
  ul {
    display: inline-flex;
    gap: 8px;
    flex-wrap: wrap;
  }

  li {
    align-items: center;
    background: #eee;
    border-radius: 6px;
    color: black;
    display: flex;
    font-size: 0.8rem;
    font-weight: 500;
    gap: 4px;
    padding: 0.2rem 0.6rem;
  }
</style>
